version: '3.8'
services:
  app:
    container_name: billingsystem
    build: ./
    ports:
      - "8091:8091"
    links:
     - dbpostgresql
    depends_on:
      - dbpostgresql
    env_file:
      - .env
  dbpostgresql:
    image: postgres
    ports:
      - "5435:5432"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
     - ./postgres-data:/var/lib/postgresql/data
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./Gdata/prometheus/config:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    #network_mode: host
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./Gdata/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
        - ~/kafka/data/zookeeper_data:/var/lib/zookeeper/data
        - ~/kafka/data/zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
        - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - ./data:/var/lib/kafka/data
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"